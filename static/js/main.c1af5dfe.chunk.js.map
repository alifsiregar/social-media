{"version":3,"sources":["Global.styles.ts","pages/Home/Home.styles.ts","components/ButtonCard/ButtonCard.styles.ts","components/ButtonCard/index.tsx","services/index.ts","pages/Home/index.tsx","pages/UserDetail/UserDetail.styles.ts","components/TwoButtonsCard/TwoButtonsCard.styles.ts","components/TwoButtonsCard/index.tsx","pages/UserDetail/index.tsx","pages/PostDetail/PostDetail.styles.ts","pages/PostDetail/index.tsx","pages/AlbumDetail/AlbumDetail.styles.ts","components/PhotosCard/PhotosCard.styles.ts","components/PhotosCard/index.tsx","pages/AlbumDetail/index.tsx","pages/PhotoDetail/PhotoDetail.styles.ts","pages/PhotoDetail/index.tsx","pages/CommentDetail/CommentDetail.styles.ts","routes.ts","pages/CommentDetail/index.tsx","App.tsx","index.tsx"],"names":["GlobalStyle","createGlobalStyle","Container","styled","div","ContentContainer","UserInfo","ButtonNav","Link","ButtonCard","title","body","link","to","getAllUser","a","axios","url","method","headers","json","data","getUserDetail","id","getUserPosts","addUserPosts","deleteUserPosts","updateUserPosts","userId","getUserAlbums","getPostDetail","postId","getPostComments","getCommentDetail","commentId","addPostComments","email","deletePostComments","updatePostComments","getAlbumDetail","albumId","getAlbumPhotos","getPhotoDetail","photoId","Home","useState","user","setUser","requestAllUser","then","res","useEffect","length","map","item","username","name","NavLink","LeftArrow","Ai","Plus","InfoItem","PostHeader","PostForm","ButtonContainer","Button","TwoButtonsCard","onClick","UserDetail","match","detailLoading","setDetailLoading","postsLoading","setPostsLoading","albumLoading","setAlbumLoading","showNewPost","setShowNewPost","newPostTitle","setNewPostTitle","newPostBody","setNewPostBody","address","city","zipcode","phone","website","company","posts","setPosts","album","setAlbum","requestNewPost","params","prevState","alert","deletePost","filter","toString","requestData","onSubmit","e","preventDefault","onChange","target","value","type","placeholder","className","PostDetail","newCommentEmail","setNewCommentEmail","newCommentBody","setNewCommentBody","postLoading","setPostLoading","commentLoading","setCommentLoading","post","setPost","comments","setComments","requestUpdatePost","requestNewComment","PhotosContainer","PhotosCard","image","src","alt","AlbumDetail","albumPhotosLoading","setAlbumPhotosLoading","albumDetail","setAlbumDetail","albumPhotos","setAlbumPhotos","thumbnailUrl","PhotoContainer","PhotoDetail","photoLoading","setPhotoLoading","photo","setPhoto","routes","path","exact","component","comment","setComment","requestUpdateComment","App","basename","process","route","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c1af5dfe.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyle = createGlobalStyle`\n\n  @import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap');\n\n  body {\n    font-family: 'Roboto', sans-serif;\n    margin: 0;\n    padding: 0;\n    background-color: #171717;\n  }\n\n  * {\n    -moz-box-sizing: border-box; \n    -webkit-box-sizing: border-box; \n     box-sizing: border-box; \n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n    margin: 20px;\n    color: #EDEDED;\n    display: flex;\n    justify-content: center;\n`;\n\nexport const ContentContainer = styled.div`\n    max-width: 1366px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`;","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n    color: #171717;\n    background-color: #EDEDED;\n    border-radius: 10px;\n    display: flex;\n    justify-content: space-between;\n    margin: 0 0 15px 0;\n    padding: 1rem;\n`;\n\nexport const UserInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    max-width: 65%;\n\n    h2 {\n        margin: 0;\n        white-space: nowrap; \n        overflow: hidden;\n        text-overflow: ellipsis; \n    }\n\n    span{\n        font-size: 14px;\n        white-space: nowrap; \n        overflow: hidden;\n        text-overflow: ellipsis; \n    }\n`;\n\nexport const ButtonNav = styled(Link)`\n    background-color: #171717;\n    color: #EDEDED;\n    border: 0;\n    padding: 0 1rem;\n    border-radius: 50px;\n    font-weight: 600;\n    cursor: pointer;\n    transition: 300ms ease-in-out;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    justify-content: center;\n`;","import {\n    Container,\n    UserInfo,\n    ButtonNav,\n} from './ButtonCard.styles';\nimport { IState } from '../../interfaces';\n\nconst ButtonCard : React.FC<IState['buttonCardComponent']> = ({title, body, link}) => {\n    return (\n        <Container title=\"ButtonCard\">\n            <UserInfo>\n                <h2>{title}</h2>\n                {body && <span>{body}</span>}\n            </UserInfo>\n            <ButtonNav to={link}>\n                DETAILS\n            </ButtonNav>\n        </Container>\n    )\n}\n\nexport default ButtonCard\n","import axios from 'axios';\n\nexport const getAllUser = async () : Promise<string> => {\n  try {\n    const json = await axios({\n      url: 'https://jsonplaceholder.typicode.com/users',\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};\n\nexport const getUserDetail = async (id: string) : Promise<string> => {\n  try {\n    const json = await axios({\n      url: `https://jsonplaceholder.typicode.com/users/${id}`,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};\n\nexport const getUserPosts = async (id: string) : Promise<string> => {\n  try {\n    const json = await axios({\n      url: `https://jsonplaceholder.typicode.com/users/${id}/posts`,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};\n\nexport const addUserPosts = async (id: string, title: string, body: string) : Promise<string> => {\n  try {\n    const json = await axios({\n      url: `https://jsonplaceholder.typicode.com/users/${id}/posts`,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: {\n        title: title,\n        body: body,\n      }\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};\n\nexport const deleteUserPosts = async (id: string) : Promise<string> => {\n  try {\n    const json = await axios({\n      url: `https://jsonplaceholder.typicode.com/posts/${id}`,\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};\n\nexport const updateUserPosts = async (id: string, title: string, body: string, userId: string) : Promise<string> => {\n  try {\n    const json = await axios({\n      url: `https://jsonplaceholder.typicode.com/posts/${id}`,\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: {\n        id: id,\n        title: title,\n        body: body,\n        userId: userId,\n      }\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};\n\nexport const getUserAlbums = async (id: string) : Promise<string> => {\n  try {\n    const json = await axios({\n      url: `https://jsonplaceholder.typicode.com/users/${id}/albums`,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};\n\nexport const getPostDetail = async (postId: string) : Promise<string> => {\n  try {\n    const json = await axios({\n      url: `https://jsonplaceholder.typicode.com/posts/${postId}`,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};\n\nexport const getPostComments = async (postId: string) : Promise<string> => {\n  try {\n    const json = await axios({\n      url: `https://jsonplaceholder.typicode.com/posts/${postId}/comments`,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};\n\nexport const getCommentDetail = async (commentId: string) : Promise<string> => {\n  try {\n    const json = await axios({\n      url: `https://jsonplaceholder.typicode.com/comments/${commentId}/`,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};\n\nexport const addPostComments = async (id: string, email: string, body: string) : Promise<string> => {\n  try {\n    const json = await axios({\n      url: `https://jsonplaceholder.typicode.com/posts/${id}/comments/`,\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: {\n        email: email,\n        body: body,\n      }\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};\n\nexport const deletePostComments = async (id: string) : Promise<string> => {\n  try {\n    const json = await axios({\n      url: `https://jsonplaceholder.typicode.com/comments/${id}/`,\n      method: 'DELETE',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};\n\n\nexport const updatePostComments = async (id: string, email: string, body: string, postId: string) : Promise<string> => {\n  try {\n    const json = await axios({\n      url: `https://jsonplaceholder.typicode.com/comments/${id}`,\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      data: {\n        id: id,\n        email: email,\n        body: body,\n        postId: postId,\n      }\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};\n\nexport const getAlbumDetail = async (albumId: string) : Promise<string> => {\n  try {\n    const json = await axios({\n      url: `https://jsonplaceholder.typicode.com/albums/${albumId}/`,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};\n\nexport const getAlbumPhotos = async (albumId: string) : Promise<string> => {\n  try {\n    const json = await axios({\n      url: `https://jsonplaceholder.typicode.com/albums/${albumId}/photos`,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};\n\nexport const getPhotoDetail = async (photoId: string) : Promise<string> => {\n  try {\n    const json = await axios({\n      url: `https://jsonplaceholder.typicode.com/photos/${photoId}`,\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    return json.data;\n  } catch (e: any) {\n    return e;\n  }\n};","import { useState, useEffect } from 'react';\nimport {\n    Container,\n    ContentContainer\n} from './Home.styles';\nimport ButtonCard from '../../components/ButtonCard';\nimport { getAllUser } from '../../services';\nimport { IState } from '../../interfaces';\n\nconst Home = () => {\n\n    const [user, setUser] = useState<IState['userState']>([]);\n    const requestAllUser = async () : Promise<void> => {\n        await getAllUser().then((res:any) => {\n            setUser(res)\n        });\n    };\n\n    useEffect(() => {\n        requestAllUser();\n    }, [])\n\n    return (\n        <Container title=\"Home\">\n            <ContentContainer>\n                <h1>Home</h1>\n                {user.length !== 0 ? \n                    user.map((item) => {\n                        return <ButtonCard key={item.id} title={item.username} body={item.name} link={`/user/${item.id}`} />\n                    })\n                        :\n                    null\n                }\n            </ContentContainer>\n        </Container>\n    )\n}\n\nexport default Home\n","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\nimport * as Ai from \"react-icons/ai\";\n\nexport const Container = styled.div`\n    margin: 20px;\n    color: #EDEDED;\n    display: flex;\n    justify-content: center;\n\n    h4{\n        margin: 0;\n    }\n`;\n\nexport const ContentContainer = styled.div`\n    max-width: 1366px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const NavLink = styled(Link)`\n    color: #EDEDED;\n    text-decoration: none;\n    display: flex;\n`;\n\nexport const LeftArrow = styled(Ai.AiOutlineArrowLeft)`\n    font-size: 15px;\n    background: none;\n    margin: 0 10px 0 0;\n`;\n\nexport const Plus = styled(Ai.AiFillPlusCircle)`\n    font-size: 15px;\n    background: none;\n    margin: 0 10px 0 0;\n`;\n\nexport const InfoItem = styled.div`\n    margin: 0 0 20px 0;\n\n    h3 {\n        margin-top: 0;\n    }\n`;\n\nexport const PostHeader = styled.div`\n    margin: 20px 0;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    div{\n        display: flex;\n        cursor: pointer;\n    }\n    h1 {\n        margin: 0;\n    }\n\n    h4{\n        margin: 0;\n    }\n`;\n\nexport const PostForm = styled.div`\n    margin: 0 0 20px 0;\n\n    form {\n        display: flex;\n        flex-direction: column;\n    }\n\n    label {\n        display: flex;\n        flex-direction: column;\n        margin: 0 0 10px 0;\n    }\n\n    .submit-btn{\n        border-radius: 25px;\n        border: none;\n        background-color: #EDEDED;\n        color: #171717;\n        padding: 10px;\n        font-weight: 600;\n        cursor: pointer;\n    }\n\n    @media only screen and (min-width: 480px) {\n        width: 50%;\n\n        .submit-btn{\n            max-width: 250px;\n        }\n    }\n`;","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n    color: #171717;\n    background-color: #EDEDED;\n    border-radius: 10px;\n    display: flex;\n    justify-content: space-between;\n    margin: 0 0 15px 0;\n    padding: 1rem;\n`;\n\nexport const UserInfo = styled.div`\n    display: flex;\n    flex-direction: column;\n    max-width: 65%;\n\n    h3 {\n        margin: 0 0 5px 0;\n        white-space: nowrap; \n        overflow: hidden;\n        text-overflow: ellipsis; \n    }\n\n    span{\n        font-size: 14px;\n    }\n`;\n\nexport const ButtonContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    width: max-content;\n    margin: 0 0 0 15px;\n\n    @media only screen and (min-width: 800px) {\n        flex-direction: row;\n        width: 225px;\n    }\n`;\n\nexport const Button = styled.div`\n    margin:  5px 0 5px 0;\n    height: 40px;\n    background-color: #171717;\n    color: #EDEDED;\n    border: 0;\n    padding: 0 1rem;\n    border-radius: 50px;\n    font-weight: 500;\n    cursor: pointer;\n    transition: 300ms ease-in-out;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    justify-content: center;\n`;\n\nexport const ButtonNav = styled(Link)`\n    margin:  5px 0 5px 0;\n    height: 40px;\n    background-color: #171717;\n    color: #EDEDED;\n    border: 0;\n    padding: 0 1rem;\n    border-radius: 50px;\n    font-weight: 500;\n    cursor: pointer;\n    transition: 300ms ease-in-out;\n    display: flex;\n    align-items: center;\n    text-decoration: none;\n    justify-content: center;\n`;","import {\n    Container,\n    UserInfo,\n    ButtonContainer,\n    Button,\n    ButtonNav,\n} from './TwoButtonsCard.styles';\nimport { IState } from '../../interfaces';\n\nconst TwoButtonsCard : React.FC<IState['twoButtonsCardComponent']> = ({title, body, link, onClick}) => {\n    return (\n        <Container title=\"TwoButtonsCard\">\n            <UserInfo>\n                <h3>{title}</h3>\n                <span>{body}</span>\n            </UserInfo>\n            <ButtonContainer>\n                <Button onClick={onClick}>\n                    DELETE\n                </Button>\n                <ButtonNav to={link}>\n                    DETAILS\n                </ButtonNav>\n            </ButtonContainer>\n        </Container>\n    )\n}\n\nexport default TwoButtonsCard\n","import { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Container,\n    ContentContainer,\n    NavLink,\n    LeftArrow,\n    InfoItem,\n    PostHeader,\n    PostForm,\n    Plus\n} from './UserDetail.styles';\nimport { \n    getUserDetail,\n    getUserPosts,\n    getUserAlbums,\n    addUserPosts,\n    deleteUserPosts\n} from '../../services';\nimport ButtonCard from '../../components/ButtonCard';\nimport TwoButtonsCard from '../../components/TwoButtonsCard';\nimport { IState } from '../../interfaces';\n\nconst UserDetail = ({ match }: RouteComponentProps<{id:string}>) => {\n\n    const [detailLoading, setDetailLoading] = useState<boolean>(true);\n    const [postsLoading, setPostsLoading] = useState<boolean>(true);\n    const [albumLoading, setAlbumLoading] = useState<boolean>(true);\n    const [showNewPost, setShowNewPost] = useState<boolean>(false);\n    const [newPostTitle, setNewPostTitle] = useState<string>('');\n    const [newPostBody, setNewPostBody] = useState<string>('');\n    const [user, setUser] = useState<IState['userDetailState']>({\n        id: 0,\n        username: '',\n        name: '',\n        email: '',\n        address:{\n            city: '',\n            zipcode: '',\n        },\n        phone: '',\n        website: '',\n        company:{\n            name: ''\n        }\n    });\n    const [posts, setPosts] = useState<IState['postsState']>([]);\n    const [album, setAlbum] = useState<IState['albumsState']>([]);\n\n    const requestNewPost =  async () : Promise<void> => {\n        await addUserPosts(match.params.id, newPostTitle, newPostBody).then((res:any) => {\n            setPosts(prevState => [...prevState, res]);\n        }).then(() => {\n            setNewPostTitle('');\n            setNewPostBody('');\n            alert('Post added!');\n        });\n    }\n\n    const deletePost = async (id: string) : Promise<void> => {\n        await deleteUserPosts(id).then((res:any) => {\n            setPosts(posts.filter((item) => (item.id).toString() !== id))\n        }).then(() => alert('Post deleted!'));\n    }\n\n    const handleSubmit = (e:any) => {\n        e.preventDefault();\n        requestNewPost();\n    }\n\n    const handleDelete = (id: string) => {\n        deletePost(id);\n    }\n\n    useEffect(() => {\n        const requestData = async () : Promise<void> => {\n            await getUserDetail(match.params.id).then((res:any) => {\n                setUser(res);\n                setDetailLoading(false);\n            });\n            await getUserPosts(match.params.id).then((res:any) => {\n                setPosts(res);\n                setPostsLoading(false);\n            });\n            await getUserAlbums(match.params.id).then((res:any) => {\n                setAlbum(res);\n                setAlbumLoading(false);\n            });\n        }\n        requestData();\n    }, [match.params.id]);\n\n    return (\n        <Container>\n            <ContentContainer>\n                <NavLink to={'/'}>\n                    <LeftArrow />\n                    <h4>\n                        Home\n                    </h4>\n                </NavLink>\n\n                {!detailLoading ?\n                    <>\n                    <h1>{user.username}'s Profile</h1>\n                    <div>\n                        <InfoItem>\n                            <h3>\n                                Username\n                            </h3>\n                            <span>\n                                {user.username}\n                            </span>\n                        </InfoItem>\n                        <InfoItem>\n                            <h3>\n                                Full Name\n                            </h3>\n                            <span>\n                                {user.name}\n                            </span>\n                        </InfoItem>\n                        <InfoItem>\n                            <h3>\n                                Email\n                            </h3>\n                            <span>\n                                {user.email}\n                            </span>\n                        </InfoItem>\n                        <InfoItem>\n                            <h3>\n                                Address\n                            </h3>\n                            <span>\n                                {user.address.city}, {user.address.zipcode}\n                            </span>\n                        </InfoItem>\n                        <InfoItem>\n                            <h3>\n                                Phone Number\n                            </h3>\n                            <span>\n                                {user.phone}\n                            </span>\n                        </InfoItem>\n                        <InfoItem>\n                            <h3>\n                                Website\n                            </h3>\n                            <span>\n                                {user.website}\n                            </span>\n                        </InfoItem>\n                        <InfoItem>\n                            <h3>\n                                Company\n                            </h3>\n                            <span>\n                                {user.company.name}\n                            </span>\n                        </InfoItem>\n                    </div>\n                    </>\n                    :\n                    <h1>\n                        Loading Profile... \n                    </h1>\n                }\n                \n                {!postsLoading ?\n                    <>\n                        <PostHeader>\n                            <h1>{user.username}'s Posts</h1>\n                            <div onClick={() => setShowNewPost(prevState => !prevState)}>\n                                <Plus />\n                                <h4>Add New Post</h4>\n                            </div>\n                        </PostHeader>\n                        {showNewPost && \n                            <PostForm>\n                                <form onSubmit={handleSubmit}>\n                                    <label>\n                                        Title\n                                        <input onChange={(e) => setNewPostTitle(e.target.value)} value={newPostTitle} type=\"text\" name=\"title\" placeholder=\"New title here!\" />\n                                    </label>\n                                    <label>\n                                        Body\n                                        <input onChange={(e) => setNewPostBody(e.target.value)} value={newPostBody} type=\"text\" name=\"body\" placeholder=\"New body here!\" />\n                                    </label>\n                                    <input className=\"submit-btn\" type=\"submit\" value=\"Submit\" />\n                                </form>\n                            </PostForm>\n                        }\n                        {posts.map((item) => {\n                            return <TwoButtonsCard key={item.id} title={item.title} body={item.body} link={`/user/${item.userId}/post/${item.id}`} onClick={() => handleDelete((item.id).toString())} />\n                        })}\n                    </>\n                        :\n                    <h1>\n                        Loading Posts... \n                    </h1>\n                }\n\n                {!albumLoading ?\n                    <>\n                        <h1>{user.username}'s Albums</h1>\n                        {album.map((item) => {\n                            return <ButtonCard key={item.id} title={item.title} link={`/user/${item.userId}/album/${item.id}`} />\n                        })}\n                    </>\n                        :\n                    <h1>\n                        Loading Albums... \n                    </h1>\n                }\n            </ContentContainer>\n        </Container>\n    )\n}\n\nexport default UserDetail\n","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\nimport * as Ai from \"react-icons/ai\";\n\nexport const Container = styled.div`\n    margin: 20px;\n    color: #EDEDED;\n    display: flex;\n    justify-content: center;\n\n    h4{\n        margin: 0;\n    }\n\n    span {\n        text-align: justify;\n    }\n`;\n\nexport const ContentContainer = styled.div`\n    max-width: 1366px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const NavLink = styled(Link)`\n    color: #EDEDED;\n    text-decoration: none;\n    display: flex;\n`;\n\nexport const LeftArrow = styled(Ai.AiOutlineArrowLeft)`\n    font-size: 15px;\n    background: none;\n    margin: 0 10px 0 0;\n`;\n\nexport const PostForm = styled.div`\n    margin: 20px 0 0 0;\n\n    h4{\n        margin: 0 0 10px 0;\n    }\n\n    form {\n        display: flex;\n        flex-direction: column;\n    }\n\n    label {\n        display: flex;\n        flex-direction: column;\n        margin: 0 0 10px 0;\n    }\n\n    .submit-btn{\n        border-radius: 25px;\n        border: none;\n        background-color: #EDEDED;\n        color: #171717;\n        padding: 10px;\n        font-weight: 600;\n        cursor: pointer;\n    }\n\n    &.comment-form{\n        margin: 0 0 20px 0;\n    }\n\n    @media only screen and (min-width: 480px) {\n        width: 50%;\n\n        .submit-btn{\n            max-width: 250px;\n        }\n    }\n`;","import { useState, useEffect } from 'react';\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Container,\n    ContentContainer,\n    NavLink,\n    LeftArrow,\n    PostForm\n} from './PostDetail.styles';\nimport { \n    getPostDetail,\n    getPostComments,\n    updateUserPosts,\n    addPostComments,\n    deletePostComments\n} from '../../services';\nimport TwoButtonsCard from '../../components/TwoButtonsCard';\nimport { IState } from '../../interfaces';\n\nconst PostDetail = ({ match }: RouteComponentProps<{id:string, postId: string}>) => {\n\n    const [newPostTitle, setNewPostTitle] = useState<string>('');\n    const [newPostBody, setNewPostBody] = useState<string>('');\n    const [newCommentEmail, setNewCommentEmail] = useState<string>('');\n    const [newCommentBody, setNewCommentBody] = useState<string>('');\n    const [postLoading, setPostLoading] = useState(true);\n    const [commentLoading, setCommentLoading] = useState(true);\n    const [post, setPost] = useState<IState['postState']>({\n        userId: 0,\n        id: 0,\n        title: '',\n        body: ''\n    });\n    const [comments, setComments] = useState<IState['commentsState']>([]);\n\n    const requestUpdatePost =  async () : Promise<void> => {\n        await updateUserPosts(match.params.postId, newPostTitle, newPostBody, match.params.id).then((res:any) => {\n            setPost(res);\n        }).then(() => {\n            setNewPostTitle('');\n            setNewPostBody('');\n            alert('Post updated!');\n        });\n    }\n\n    const requestNewComment =  async () : Promise<void> => {\n        await addPostComments(match.params.postId, newCommentEmail, newCommentBody).then((res:any) => {\n            setComments(prevState => [...prevState, res])\n        }).then(() => {\n            setNewCommentEmail('');\n            setNewCommentBody('');\n            alert('Comment posted!');\n        });\n    }\n\n    const deletePost = async (id: string) : Promise<void> => {\n        await deletePostComments(id).then((res:any) => {\n            setComments(comments.filter((item) => (item.id).toString() !== id))\n        }).then(() => alert('Post deleted!'));\n    }\n\n    const handleDelete = (id: string) => {\n        deletePost(id);\n    }\n\n    const handleSubmitPost = (e:any) => {\n        e.preventDefault();\n        requestUpdatePost();\n    }\n\n    const handleSubmitComment = (e:any) => {\n        e.preventDefault();\n        requestNewComment();\n    }\n\n    useEffect(() => {\n        const requestData = async () : Promise<void> => {\n            await getPostDetail(match.params.postId).then((res:any) => {\n                setPost(res);\n                setPostLoading(false);\n            });\n            await getPostComments(match.params.postId).then((res:any) => {\n                setComments(res);\n                setCommentLoading(false);\n            })\n        }\n        requestData();\n    }, [match.params.postId]);\n\n    return (\n        <Container>\n            <ContentContainer>\n                <NavLink to={`/user/${match.params.id}`}>\n                    <LeftArrow />\n                    <h4>\n                        Profile\n                    </h4>\n                </NavLink>\n\n                {!postLoading ?\n                    <> \n                        <h1>\n                            {post.title}\n                        </h1>\n                        <span className=\"post-body\">\n                            {post.body}\n                        </span>\n                        <PostForm>\n                            <form onSubmit={handleSubmitPost} >\n                                <h4>\n                                    Edit Post\n                                </h4>\n                                <label>\n                                    Title\n                                    <input onChange={(e) => setNewPostTitle(e.target.value)} value={newPostTitle} type=\"text\" name=\"title\" placeholder=\"New title here!\" />\n                                </label>\n                                <label>\n                                    Body\n                                    <input onChange={(e) => setNewPostBody(e.target.value)} value={newPostBody} type=\"text\" name=\"body\" placeholder=\"New body here!\" />\n                                </label>\n                                <input className=\"submit-btn\" type=\"submit\" value=\"Submit\" />\n                            </form>\n                        </PostForm>\n                    </>\n                    :\n                    <h1>\n                        Loading Post... \n                    </h1>\n                }\n\n                {!commentLoading ?\n                    <>\n                        <h1>\n                            Comments\n                        </h1>\n                        <PostForm className=\"comment-form\">\n                            <form onSubmit={handleSubmitComment} >\n                                <h4>\n                                    Add Comment\n                                </h4>\n                                <label>\n                                    Email\n                                    <input onChange={(e) => setNewCommentEmail(e.target.value)} value={newCommentEmail} type=\"text\" name=\"email\" placeholder=\"Your email here!\" />\n                                </label>\n                                <label>\n                                    Body\n                                    <input onChange={(e) => setNewCommentBody(e.target.value)} value={newCommentBody} type=\"text\" name=\"body\" placeholder=\"Your comment here!\" />\n                                </label>\n                                <input className=\"submit-btn\" type=\"submit\" value=\"Submit\" />\n                            </form>\n                        </PostForm> \n                        {comments.map((item) => {\n                            return <TwoButtonsCard key={item.id} title={item.email} body={item.body} link={`/user/${match.params.id}/post/${item.postId}/comment/${item.id}`} onClick={() => handleDelete((item.id).toString())} />\n                        })}\n                    </>\n                        :\n                    <h1>\n                        Loading Post... \n                    </h1>\n                }\n            </ContentContainer>\n        </Container>\n    )\n}\n\nexport default PostDetail\n","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\nimport * as Ai from \"react-icons/ai\";\n\nexport const Container = styled.div`\n    margin: 20px;\n    color: #EDEDED;\n    display: flex;\n    justify-content: center;\n\n    h4{\n        margin: 0;\n    }\n`;\n\nexport const ContentContainer = styled.div`\n    max-width: 1366px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\n\nexport const NavLink = styled(Link)`\n    color: #EDEDED;\n    text-decoration: none;\n    display: flex;\n`;\n\nexport const LeftArrow = styled(Ai.AiOutlineArrowLeft)`\n    font-size: 15px;\n    background: none;\n    margin: 0 10px 0 0;\n`;\n\nexport const PhotosContainer = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: center;\n`;","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n    margin: 10px;\n    padding: 20px;\n    width: 200px;\n    height: 90%;\n    background-color: #EDEDED;\n    color: #171717;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    text-align: center;\n`;\n\nexport const NavLink = styled(Link)`\n    text-decoration: none;\n`;","import {\n    Container,\n    NavLink\n} from './PhotosCard.styles';\nimport { IState } from '../../interfaces';\n\nconst PhotosCard: React.FC<IState['photosCardComponent']> = ({image, title, link}) => {\n    return (\n        <NavLink to={link}>\n            <Container title=\"PhotosCard\">\n                <img src={image} alt={title} />\n                <h3>\n                    {title}\n                </h3>\n            </Container>\n        </NavLink>\n    )\n}\n\nexport default PhotosCard\n","import { useState, useEffect } from \"react\";\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Container,\n    ContentContainer,\n    NavLink,\n    LeftArrow,\n    PhotosContainer\n} from './AlbumDetail.styles';\nimport PhotosCard from '../../components/PhotosCard';\nimport { \n    getAlbumDetail,\n    getAlbumPhotos\n} from '../../services';\nimport { IState } from \"../../interfaces\";\n\nconst AlbumDetail = ({ match }: RouteComponentProps<{id:string, albumId: string}>) => {\n\n    const [albumPhotosLoading, setAlbumPhotosLoading] = useState<boolean>(true);\n    const [albumDetail, setAlbumDetail] = useState<IState['albumDetailState']>({\n        userId: 0,\n        id: 0,\n        title: ''\n    });\n    const [albumPhotos, setAlbumPhotos] = useState<IState['albumPhotosState']>([]);\n\n    useEffect(() => {\n        const requestData = async () : Promise<void> => {\n            await getAlbumDetail(match.params.albumId).then((res:any) => {\n                setAlbumDetail(res);\n            });\n            await getAlbumPhotos(match.params.albumId).then((res:any) => {\n                setAlbumPhotos(res);\n                setAlbumPhotosLoading(false);\n            })\n        }\n        requestData();\n    }, [match.params.albumId]);\n\n    return (\n        <Container>\n            <ContentContainer>\n                <NavLink to={`/user/${match.params.id}`}>\n                    <LeftArrow />\n                    <h4>\n                        Profile\n                    </h4>\n                </NavLink>\n                {!albumPhotosLoading ?\n                    <>\n                        <h1>{albumDetail.title}</h1>\n                        <PhotosContainer>\n                            {albumPhotos.map((item) => {\n                                return <PhotosCard key={item.id} image={item.thumbnailUrl} title={item.title} link={`/user/${match.params.id}/album/${item.albumId}/photo/${item.id}`} />\n                            })}\n                        </PhotosContainer>\n                    </>\n                    :\n                    <h1>\n                        Loading...\n                    </h1>\n                }\n            </ContentContainer>\n        </Container>\n    )\n}\n\nexport default AlbumDetail\n","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\nimport * as Ai from \"react-icons/ai\";\n\nexport const Container = styled.div`\n    margin: 20px;\n    color: #EDEDED;\n    display: flex;\n    justify-content: center;\n\n    h4{\n        margin: 0;\n    }\n`;\n\nexport const ContentContainer = styled.div`\n    max-width: 1366px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const NavLink = styled(Link)`\n    color: #EDEDED;\n    text-decoration: none;\n    display: flex;\n`;\n\nexport const LeftArrow = styled(Ai.AiOutlineArrowLeft)`\n    font-size: 15px;\n    background: none;\n    margin: 0 10px 0 0;\n`;\n\nexport const PhotoContainer = styled.div`\n    margin: 20px 0 0 0;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    img{\n        max-width: 100%;\n    }\n\n    h1{\n        text-align: center;\n    }\n`;","import { useEffect, useState } from \"react\";\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Container,\n    ContentContainer,\n    NavLink,\n    LeftArrow,\n    PhotoContainer\n} from './PhotoDetail.styles';\nimport {\n    getPhotoDetail\n} from '../../services';\nimport { IState } from \"../../interfaces\";\n\nconst PhotoDetail = ({ match }: RouteComponentProps<{id: string; albumId: string; photoId: string;}>) => {\n\n    const [photoLoading, setPhotoLoading] = useState(true);\n    const [photo, setPhoto] = useState<IState['photoState']>({\n        albumId: 0,\n        id: 0,\n        title: '',\n        url: ''\n    });\n\n    useEffect(() => {\n        const requestData = async () : Promise<void> => {\n            await getPhotoDetail(match.params.photoId).then((res:any) => {\n                setPhoto(res);\n                setPhotoLoading(false);\n            });\n        }\n        requestData();\n    }, [match.params.photoId]);\n\n    return (\n        <Container>\n            <ContentContainer>\n                <NavLink to={`/user/${match.params.id}/album/${match.params.albumId}`}>\n                    <LeftArrow />\n                    <h4>\n                        Album\n                    </h4>\n                </NavLink>\n                {!photoLoading ? \n                    <PhotoContainer>\n                        <img src={photo.url} alt={photo.title} />\n                        <h1>{photo.title}</h1>\n                    </PhotoContainer>\n                    :\n                    <h1>Loading...</h1>\n                }\n            </ContentContainer>\n        </Container>\n    )\n}\n\nexport default PhotoDetail\n","import styled from \"styled-components\";\nimport { Link } from 'react-router-dom';\nimport * as Ai from \"react-icons/ai\";\n\nexport const Container = styled.div`\n    margin: 20px;\n    color: #EDEDED;\n    display: flex;\n    justify-content: center;\n\n    h4{\n        margin: 0;\n    }\n`;\n\nexport const ContentContainer = styled.div`\n    max-width: 1366px;\n    width: 100%;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const NavLink = styled(Link)`\n    color: #EDEDED;\n    text-decoration: none;\n    display: flex;\n`;\n\nexport const LeftArrow = styled(Ai.AiOutlineArrowLeft)`\n    font-size: 15px;\n    background: none;\n    margin: 0 10px 0 0;\n`;\n\nexport const PostForm = styled.div`\n    margin: 20px 0 0 0;\n\n    h4{\n        margin: 0 0 10px 0;\n    }\n\n    form {\n        display: flex;\n        flex-direction: column;\n    }\n\n    label {\n        display: flex;\n        flex-direction: column;\n        margin: 0 0 10px 0;\n    }\n\n    .submit-btn{\n        border-radius: 25px;\n        border: none;\n        background-color: #EDEDED;\n        color: #171717;\n        padding: 10px;\n        font-weight: 600;\n        cursor: pointer;\n    }\n\n    &.comment-form{\n        margin: 0 0 20px 0;\n    }\n\n    @media only screen and (min-width: 480px) {\n        width: 50%;\n\n        .submit-btn{\n            max-width: 250px;\n        }\n    }\n`;","import {\n    Home,\n    UserDetail,\n    PostDetail,\n    AlbumDetail,\n    PhotoDetail,\n    CommentDetail\n} from './pages';\n\nexport const routes = [\n    {\n        name: 'Home',\n        path: '/',\n        exact: true,\n        component: Home,\n    },\n    {\n        name: 'User Detail',\n        path: '/user/:id',\n        exact: true,\n        component: UserDetail,\n    },\n    {\n        name: 'Post Detail',\n        path: '/user/:id/post/:postId',\n        exact: true,\n        component: PostDetail,\n    },\n    {\n        name: 'Album Detail',\n        path: '/user/:id/album/:albumId',\n        exact: true,\n        component: AlbumDetail,\n    },\n    {\n        name: 'Photo Detail',\n        path: '/user/:id/album/:albumId/photo/:photoId',\n        exact: false,\n        component: PhotoDetail,\n    },\n    {\n        name: 'Comment Detail',\n        path: '/user/:id/post/:postId/comment/:commentId',\n        exact: false,\n        component: CommentDetail,\n    },\n]","import { useEffect, useState } from \"react\";\nimport { RouteComponentProps } from 'react-router-dom';\nimport {\n    Container,\n    ContentContainer,\n    NavLink,\n    LeftArrow,\n    PostForm\n} from './CommentDetail.styles';\nimport {\n    getCommentDetail,\n    updatePostComments\n} from '../../services';\nimport { IState } from \"../../interfaces\";\n\nconst CommentDetail = ({ match }: RouteComponentProps<{id: string; postId: string; commentId: string;}>) => {\n\n    const [newCommentEmail, setNewCommentEmail] = useState<string>('');\n    const [newCommentBody, setNewCommentBody] = useState<string>('');\n    const [commentLoading, setCommentLoading] = useState(true);\n    const [comment, setComment] = useState<IState['commentState']>({\n        postId: 0,\n        id: 0,\n        email: '',\n        body: ''\n    });\n\n    const requestUpdateComment =  async () : Promise<void> => {\n        await updatePostComments(match.params.commentId, newCommentEmail, newCommentBody, match.params.postId).then((res:any) => {\n            setComment(res);\n        }).then(() => {\n            setNewCommentEmail('');\n            setNewCommentBody('');\n            alert('Comment updated!');\n        });\n    }\n\n    const handleSubmitComment = (e:any) => {\n        e.preventDefault();\n        requestUpdateComment();\n    }\n\n    useEffect(() => {\n        const requestData = async () : Promise<void> => {\n            await getCommentDetail(match.params.commentId).then((res:any) => {\n                setComment(res);\n                setCommentLoading(false);\n            });\n        }\n        requestData();\n    }, [match.params.commentId]);\n\n    return (\n        <Container>\n            <ContentContainer>\n                <NavLink to={`/user/${match.params.id}/post/${match.params.postId}`}>\n                    <LeftArrow />\n                    <h4>\n                        Post\n                    </h4>\n                </NavLink>\n                {!commentLoading ?\n                    <> \n                        <h1>\n                            {comment.email}\n                        </h1>\n                        <span className=\"post-body\">\n                            {comment.body}\n                        </span>\n                        <PostForm>\n                            <form onSubmit={handleSubmitComment}>\n                                <h4>\n                                    Edit Comment\n                                </h4>\n                                <label>\n                                    Email\n                                    <input onChange={(e) => setNewCommentEmail(e.target.value)} value={newCommentEmail} type=\"text\" name=\"email\" placeholder=\"New email here!\" />\n                                </label>\n                                <label>\n                                    Body\n                                    <input onChange={(e) => setNewCommentBody(e.target.value)} value={newCommentBody} type=\"text\" name=\"body\" placeholder=\"New body here!\" />\n                                </label>\n                                <input className=\"submit-btn\" type=\"submit\" value=\"Submit\" />\n                            </form>\n                        </PostForm>\n                    </>\n                    :\n                    <h1>Loading...</h1>\n                }\n            </ContentContainer>\n        </Container>\n    )\n}\n\nexport default CommentDetail\n","import React from 'react';\nimport { \n  BrowserRouter as Router,\n  Switch,\n  Route \n} from 'react-router-dom';\nimport { GlobalStyle } from './Global.styles';\nimport { routes } from './routes';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <Router basename={process.env.PUBLIC_URL}>\n        <Switch>\n          {routes.map((route) => (\n            <Route\n              key={route.name}\n              exact={route.exact}\n              path={route.path}\n              component={route.component}\n            />\n          ))}\n        </Switch>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}